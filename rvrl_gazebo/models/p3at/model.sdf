<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="robot">
    
    <pose>0 0 0.180 0 0 0</pose>

    <link name="base_footprint"/>

    <link name="base_link">
      
      <inertial>
        <mass>14.0</mass>
        <inertia>
          <ixx>0.147116667</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.334951167</iyy>
          <iyz>0.0</iyz>
          <izz>0.3978345</izz>
        </inertia>
      </inertial>
      <collision name="base_collision">
        <geometry>
          <box>
            <size>0.501 0.300 0.19</size>
          </box>
        </geometry>
      </collision>
      <visual name="base_visual">
        <geometry>
          <mesh>
            <uri>model://p3at/meshes/chassis.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="imu_link">
      <sensor name="p3at_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="p3at_imu" filename="libgazebo_ros_imu_sensor.so">
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <link name="base_scan">
      <pose>0.1 0 0.135 0 0 0</pose>
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.6205208333e-04</ixx>
          <iyy>0.6205208333e-04</iyy>
          <izz>4.1927083333e-05</izz>
        </inertia>
      </inertial>
      <visual name="visual-base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.7 0.7 0.7 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
      <visual name="visual-top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
      <visual name="visual-top-back">
        <pose>-0.02 0 0.019 0 0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.025</size>
          </box>
        </geometry>
        <material>
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.3 0.3 0.3 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
      <collision name="collision-base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
      </collision>
      <collision name="collision-top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
      </collision>

      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>false</visualize>
        <pose>-0.064 0 0.121 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
		          <samples>181</samples>	
		          <resolution>1</resolution>
		          <min_angle>-1.570796</min_angle> 
		          <max_angle>1.570796</max_angle>  
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30</max> 
            <resolution>0.001</resolution> 
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="p3at_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
              <!-- <namespace>/tb3</namespace> -->
              <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- begin of sonar added by Arnoud Visser - July 2022 -->
    <link name="front_sonar">
        <pose> 0.21 0 +0.08 0 0 0 </pose>
        <inertial>
            <mass>0.1</mass>
            <pose> 0.0 0 0.0 0 0 0 </pose>
            <inertia>
                <ixx>1.0</ixx>
                <ixy>0.0</ixy>
                <ixz>0.0</ixz>
                <iyy>1.0</iyy>
                <iyz>0.0</iyz>
                <izz>1.0</izz>
            </inertia>
        </inertial>
        <sensor name="so0" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.065 +0.165 0 0 0 +1.5707963268</pose> <!-- 90 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so0/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so1" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.035 +0.1025 0 0 0 +0.872664626</pose> <!-- 50 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so1/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so2" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <!--visualize>true</visualize-->
            <pose>-0.02 +0.0575 0 0 0 +0.5235987756</pose> <!-- 30 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so2/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so3" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.01 +0.0115 0 0 0 +0.1745329252</pose> <!-- 10 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so3/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so4" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.01 -0.0115 0 0 0 -0.1745329252</pose> <!-- 10 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so4/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so5" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.02 -0.0575 0 0 0 -0.5235987756</pose> <!-- 30 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so5/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so6" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.035 -0.1025 0 0 0 -0.872664626</pose> <!-- 50 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so6/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
        <sensor name="so7" type="ray">
            <always_on>true</always_on>
            <!--visualize>false</visualize-->
            <visualize>true</visualize>
            <pose>-0.065 -0.165 0 0 0 -1.5707963268</pose> <!-- 90 degrees -->
            <update_rate>3</update_rate>
            <ray>
                <scan>
                  <horizontal>
                      <samples>4</samples>
                      <angle_increment>0.0698131701</angle_increment><!-- 4 degrees -->
                      <min_angle>-0.1396263402</min_angle>
                      <max_angle>+0.1396263402</max_angle> <!-- opening angle of 16 degrees -->
                  </horizontal>
                </scan>
                <range>
                    <min>0.1</min>
                    <max>4</max>
                    <resolution>0.2</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.1</stddev>
                </noise>
            </ray>
            <plugin name="p3at_front_sonar" filename="libgazebo_ros_ray_sensor.so">
                 <ros>
                     <remapping>~/out:=so7/range</remapping>
                 </ros>
                 <output_type>sensor_msgs/Range</output_type>
                 <frame_name>front_sonar</frame_name>
            </plugin>
        </sensor>
    </link>
    <joint name="base_front_joint" type="fixed">
        <pose> 0.0 0 0.0 0 0 0 </pose>
        <parent>base_link</parent>
        <child>front_sonar</child>
    </joint>
    <!-- end of sonar added by Arnoud Visser - July 2022 -->

    <link name="right_front_wheel">
      <pose>0.125 -0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>

            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://p3at/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <link name="left_front_wheel">
      <pose>0.125 0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>

            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://p3at/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <link name="right_rear_wheel">
      <pose>-0.125 -0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://p3at/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>
    <link name="left_rear_wheel">
      <pose>-0.125 0.201 -0.06 1.5707 0 0</pose>

      <inertial>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.005240625</ixx>
          <iyy>0.005240625</iyy>
          <izz>0.009075</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>

      <collision name="collision">
        <geometry>
          <cylinder>
            <radius>0.110</radius>
            <length>0.075</length>
          </cylinder>
        </geometry>
        <surface>
          <friction>
            <ode>
              <mu>1</mu>
              <mu2>1</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="visual">
        <geometry>
          <mesh>
            <uri>model://p3at/meshes/wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <joint type="revolute" name="right_front">
      <pose>0 0 0 0 0 0</pose>
      <child>right_front_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>

    <joint type="revolute" name="right_rear">
      <pose>0 0 0 0 0 0</pose>
      <child>right_rear_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>

    <joint type="revolute" name="left_front">
      <pose>0 0 0 0 0 0</pose>
      <child>left_front_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>
    
    <joint type="revolute" name="left_rear">
      <pose>0 0 0 0 0 0</pose>
      <child>left_rear_wheel</child>
      <parent>base_link</parent>
      <axis>
        <xyz>0 1 0</xyz>
        <use_parent_model_frame>true</use_parent_model_frame>
      </axis>
    </joint>

    <link name="camera_link">
      <pose>0.1 0 0.22 0 0 0</pose>
      <audio_sink /> <!-- Camera and microphone should be combined -->
      <inertial>
        <mass>0.1</mass>
        <inertia>
          <ixx>0.000166667</ixx>
          <iyy>0.000166667</iyy>
          <izz>0.000166667</izz>
        </inertia>
      </inertial>
      <collision name="collision-box">
        <pose>-0.01 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.08 0.1 0.1</size>
          </box>
        </geometry>
      </collision>
      <collision name="collision-lens">
        <pose>0.04 0 0 0 1.57 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name="visual-box">
        <pose>-0.01 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.08 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <ambient>0.3 0.3 0.3 1</ambient>
          <diffuse>0.7 0.7 0.7 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>
      <visual name="visual-lens">
        <pose>0.04 0 0 0 1.57 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03</radius>
            <length>0.02</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
          <emissive>0 0 0 0</emissive>
        </material>
      </visual>

      <sensor name="intel_realsense_r200_depth" type="depth">
        <always_on>1</always_on>
        <update_rate>5</update_rate>
        <pose>0.064 -0.047 0.107 0 0 0</pose>
        <camera name="realsense_depth_camera">
        </camera>
        <plugin name="intel_realsense_r200_depth_driver" filename="libgazebo_ros_camera.so">
          <ros>
          </ros>
          <camera_name>camera</camera_name>
          <frame_name>camera_frame</frame_name>
          <hack_baseline>0.07</hack_baseline>
          <min_depth>0.001</min_depth>
          <max_depth>5.0</max_depth>
        </plugin>
      </sensor>

      <collision name="collision">
        <pose>0 0.047 -0.005 0 0 0</pose>
        <geometry>
          <box>
            <size>0.008 0.130 0.022</size>
          </box>
        </geometry>
      </collision>
      <pose>0.069 -0.047 0.107 0 0 0</pose>
    </link>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.010 0 0 0</pose>
    </joint>
    
    <joint name="lidar_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_scan</child>
      <pose>-0.064 0 0.121 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    
    <joint name="camera_joint" type="fixed">
      <parent>base_link</parent>
      <child>camera_link</child>
      <pose>0.064 -0.065 0.094 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="camera_rgb_joint" type="fixed">
      <parent>camera_link</parent>
      <child>camera_rgb_frame</child>
      <pose>0.005 0.018 0.013 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>

      <ros>
        <remapping>/tf:=tf</remapping>
      </ros>

      <!-- Update rate -->
      <update_rate>30</update_rate>

        <!-- Number of wheel pairs -->
        <num_wheel_pairs>2</num_wheel_pairs>
        
        <!-- wheels0 -->
        <left_joint>left_front</left_joint>
        <right_joint>right_front</right_joint>

        <!-- wheels1-->
        <left_joint>left_rear</left_joint>
        <right_joint>right_rear</right_joint>

        <!-- kinematics -->
        <wheel_separation>0.4</wheel_separation>
        <wheel_separation>0.4</wheel_separation>

        <wheel_diameter>0.215</wheel_diameter>
        <wheel_diameter>0.215</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>200</max_wheel_torque>
        <max_wheel_acceleration>1.0</max_wheel_acceleration>

        <command_topic>cmd_vel</command_topic>

        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>false</publish_wheel_tf>

        <odometry_topic>odom</odometry_topic>
        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>base_link</robot_base_frame>

      </plugin>

    <plugin name="p3at_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>left_front</joint_name>
      <joint_name>right_front</joint_name>
      <joint_name>left_rear</joint_name>
      <joint_name>right_rear</joint_name>
    </plugin>   
  </model>
</sdf>
